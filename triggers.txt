CREATE TRIGGER `pedido_stock` AFTER UPDATE ON `pedido`
 FOR EACH ROW BEGIN
            DECLARE done INT DEFAULT FALSE;
            DECLARE pid int;
            DECLARE pcantidad int;
            DECLARE ptalle char(15);
            DECLARE productos CURSOR FOR SELECT id_producto, talle, cantidad FROM pedido_producto WHERE id_pedido = OLD.id;
            DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
            
            OPEN productos;
            read_loop: LOOP
                FETCH productos INTO pid,ptalle,pcantidad;
                IF done THEN
                    LEAVE read_loop;
                END IF;
                	IF NEW.estado = -1 OR NEW.estado = -2 THEN
                        UPDATE stock SET reserva = reserva - pcantidad WHERE id_producto = pid AND talle = ptalle;                     	
                        INSERT INTO auditoria_pedidos (id_pedido,resultado,fecha)
                        VALUES (NEW.id,(SELECT descripcion FROM estado WHERE id = NEW.estado),NOW());
                    ELSEIF NEW.estado = 1 THEN
                    	UPDATE stock SET reserva = reserva + pcantidad WHERE id_producto = pid AND talle = ptalle;
                    ELSEIF NEW.estado = 2 THEN
                    	UPDATE stock SET reserva = reserva - pcantidad WHERE id_producto = pid AND talle = ptalle;
                        UPDATE stock SET cantidad = cantidad - pcantidad WHERE id_producto = pid AND talle = ptalle;
                        INSERT INTO auditoria_pedidos (id_pedido,resultado,fecha)
                        VALUES (NEW.id,(SELECT descripcion FROM estado WHERE id = NEW.estado),NOW());
                    END IF;
            END LOOP;
            CLOSE productos;
 END

CREATE TRIGGER `pedido_elim` BEFORE DELETE ON `pedido`
 FOR EACH ROW BEGIN
	DELETE FROM pedido_producto WHERE id_pedido = OLD.id;
END

CREATE TRIGGER `pedido_stock` AFTER UPDATE ON `pedido`
FOR EACH ROW BEGIN
    DECLARE done INT DEFAULT FALSE;
    DECLARE pid int;
    DECLARE pcantidad int;
    DECLARE ptalle char(15);
    DECLARE productos CURSOR FOR SELECT id_producto, talle, cantidad FROM pedido_producto WHERE id_pedido = OLD.id;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    IF NEW.estado = -2 OR NEW.estado = -1 THEN
        OPEN productos;
        read_loop: LOOP
            FETCH productos INTO pid,ptalle,pcantidad;
            IF done THEN
                LEAVE read_loop;
            END IF;  
            
            UPDATE stock SET reserva = reserva - pcantidad WHERE id_producto = pid AND talle = ptalle;                      
            INSERT INTO auditoria_pedidos (id_pedido,resultado,fecha)
            VALUES (NEW.id,(SELECT descripcion FROM estado WHERE id = NEW.estado),NOW());   
            
        END LOOP; 
        CLOSE productos;
    ELSEIF NEW.estado = 1 THEN
    OPEN productos;
        read_loop: LOOP
            FETCH productos INTO pid,ptalle,pcantidad;
            IF done THEN
                LEAVE read_loop;
            END IF;  
            
            UPDATE stock SET reserva = reserva + pcantidad WHERE id_producto = pid AND talle = ptalle;             
        END LOOP; 
        CLOSE productos;    
    ELSEIF NEW.estado = 2 THEN
    OPEN productos;
        read_loop: LOOP
            FETCH productos INTO pid,ptalle,pcantidad;
            IF done THEN
                LEAVE read_loop;
            END IF;  
            
            UPDATE stock SET reserva = reserva - pcantidad WHERE id_producto = pid AND talle = ptalle;
            UPDATE stock SET cantidad = cantidad - pcantidad WHERE id_producto = pid AND talle = ptalle;
            INSERT INTO auditoria_pedidos (id_pedido,resultado,fecha)
            VALUES (NEW.id,(SELECT descripcion FROM estado WHERE id = NEW.estado),NOW());  
            
        END LOOP; 
        CLOSE productos;    
    END IF;   
END$$
